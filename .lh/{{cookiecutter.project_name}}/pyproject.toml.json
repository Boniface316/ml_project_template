{
    "sourceFile": "{{cookiecutter.project_name}}/pyproject.toml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1719876625417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719876640184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n [tool.poetry]\n-name = \"{{ cookiecutter.[package_name }}\"\n+name = \"{{ cookiecutter.package_name }}\"\n version = \"{{ cookiecutter.version }}\"\n description = \"{{ cookiecutter.project_short_description }}\"\n repository = \"{{ cookiecutter.repository_url }}\"\n documentation = \"{{ cookiecutter.documentation_url }}\"\n authors = [\"{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>\"]\n readme = \"README.md\"\n license = \"{{ cookiecutter.open_source_license }}\"\n keywords = [{% for keyword in cookiecutter.keywords.split(',') %}\"{{ keyword.strip() }}\", {% endfor %}]\n-packages = [{ include = \"{{ cookiecutter.[package_name }}\", from = \"src\" }]\n+packages = [{ include = \"{{ cookiecutter.package_name }}\", from = \"src\" }]\n \n [tool.poetry.scripts]\n-{{ cookiecutter.[package_name }} = '{{ cookiecutter.[package_name }}.scripts:main'\n+{{ cookiecutter.package_name }} = '{{ cookiecutter.package_name }}.scripts:main'\n \n [tool.poetry.dependencies]\n python = \"^{{ cookiecutter.python_version }}\"\n loguru = \"^0.7.2\"\n"
                },
                {
                    "date": 1719877009157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,18 +15,14 @@\n \n [tool.poetry.dependencies]\n python = \"^{{ cookiecutter.python_version }}\"\n loguru = \"^0.7.2\"\n-matplotlib = \"^3.8.3\"\n mlflow = \"^2.11.0\"\n numpy = \"^1.26.4\"\n pandas = \"^2.2.1\"\n-pandera = \"^0.18.3\"\n-plotly = \"^5.19.0\"\n pyarrow = \"^15.0.1\"\n pydantic = \"^2.6.4\"\n pydantic-settings = \"^2.2.1\"\n-scikit-learn = \"^1.4.1\"\n \n [tool.poetry.group.checks.dependencies]\n bandit = \"^1.7.8\"\n coverage = \"^7.4.3\"\n"
                }
            ],
            "date": 1719876625417,
            "name": "Commit-0",
            "content": "[tool.poetry]\nname = \"{{ cookiecutter.[package_name }}\"\nversion = \"{{ cookiecutter.version }}\"\ndescription = \"{{ cookiecutter.project_short_description }}\"\nrepository = \"{{ cookiecutter.repository_url }}\"\ndocumentation = \"{{ cookiecutter.documentation_url }}\"\nauthors = [\"{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>\"]\nreadme = \"README.md\"\nlicense = \"{{ cookiecutter.open_source_license }}\"\nkeywords = [{% for keyword in cookiecutter.keywords.split(',') %}\"{{ keyword.strip() }}\", {% endfor %}]\npackages = [{ include = \"{{ cookiecutter.[package_name }}\", from = \"src\" }]\n\n[tool.poetry.scripts]\n{{ cookiecutter.[package_name }} = '{{ cookiecutter.[package_name }}.scripts:main'\n\n[tool.poetry.dependencies]\npython = \"^{{ cookiecutter.python_version }}\"\nloguru = \"^0.7.2\"\nmatplotlib = \"^3.8.3\"\nmlflow = \"^2.11.0\"\nnumpy = \"^1.26.4\"\npandas = \"^2.2.1\"\npandera = \"^0.18.3\"\nplotly = \"^5.19.0\"\npyarrow = \"^15.0.1\"\npydantic = \"^2.6.4\"\npydantic-settings = \"^2.2.1\"\nscikit-learn = \"^1.4.1\"\n\n[tool.poetry.group.checks.dependencies]\nbandit = \"^1.7.8\"\ncoverage = \"^7.4.3\"\nmypy = \"^1.9.0\"\npytest = \"^8.1.1\"\npytest-cov = \"^4.1.0\"\npytest-xdist = \"^3.5.0\"\npandera = { extras = [\"mypy\"], version = \"^0.18.3\" }\nruff = \"^0.3.3\"\n\n[tool.poetry.group.commits.dependencies]\ncommitizen = \"^3.18.3\"\npre-commit = \"^3.6.2\"\n\n[tool.poetry.group.dev.dependencies]\ninvoke = \"^2.2.0\"\n\n[tool.poetry.group.docs.dependencies]\npdoc = \"^14.4.0\"\n\n[tool.poetry.group.notebooks.dependencies]\nipykernel = \"^6.29.3\"\nnbformat = \"^5.10.2\"\n\n[tool.bandit]\ntargets = [\"src\"]\n\n[tool.commitizen]\nname = \"cz_conventional_commits\"\ntag_format = \"v$version\"\nversion_scheme = \"pep440\"\nversion_provider = \"poetry\"\nchangelog_start_rev = \"v{{ cookiecutter.version }}\"\nupdate_changelog_on_bump = true\n\n[tool.coverage.run]\nbranch = true\nsource = [\"src\"]\nomit = [\"__main__.py\"]\n\n[tool.mypy]\npretty = true\nstrict = true\npython_version = \"{{ cookiecutter.python_version }}\"\ncheck_untyped_defs = true\nignore_missing_imports = true\nplugins = [\"pandera.mypy\", \"pydantic.mypy\"]\n\n[tool.pytest.ini_options]\naddopts = \"--verbosity=2\"\npythonpath = [\"src\"]\n\n[tool.ruff]\nfix = true\nindent-width = 4\nline-length = 100\ntarget-version = \"py{{ cookiecutter.python_version.replace('.', '') }}\"\n\n[tool.ruff.format]\ndocstring-code-format = true\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"google\"\n\n[tool.ruff.lint.per-file-ignores]\n\"tests/*.py\" = [\"D100\", \"D103\"]\n\n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\""
        }
    ]
}